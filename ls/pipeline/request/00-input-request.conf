input {
    #http_poller {
    #    urls => {      
    #    getFOS  => {
    #        method => get
    #        url => "http://10.27.12.4:28888/core-data/projects/"
    #        headers => { "Content-Type" => "application/json" }
    #        }
    #    }
    #    request_timeout => 60
    #    codec => "json"
    #    type => "Http_poller"
    #    schedule => { "every" => "1m" }
    #}

    http {
        port => "8888"
    }
}

filter {
    ruby {
        code => " 
            event.to_hash.each { | k, v |
                if (!['returned'].include?(k))
                    event.remove(k)
                end
            }"
    }
    
    split {
        field => 'returned'
    }

    ruby {
        code => "
            event.get('returned').each { | k, v |
                event.set(k, v)
            }
        "
    }

    ruby {
        code => " 
            event.to_hash.each { | k, v |
                if (!['organization','key','projectParameters'].include?(k))
                    event.remove(k)
                end
            }"
    }

    split {
        field => 'projectParameters'
    }

    ruby {
        code => "
            event.get('projectParameters').each { | k, v |
                event.set('projectParameters_' + k, v)
            }
        "
    }

    mutate {
        remove_field => [ 'returned' ]
        add_field => { 'organization_id' => '%{[organization][id]}' }
        add_field => { 'organization_name' => '%{[organization][name]}' }
    }

    mutate {
        remove_field => [ 'projectParameters' ]
    }
}

#
#
#filter {
#    ruby {
#        code => " 
#            event.to_hash.each {|k,v|
#                if (!['organization','key','projectParameters'].include?(k))
#                    event.remove(k)
#                end
#            }"
#    }
#}
#
#filter {
#
#    split {
#        field => "tools"
#    }
#
#    ruby {
#        code => "
#            event.get('returned').each { |k, v|
#                event.set(k, v)
#            }
#        "
#    }
#
#    mutate {
#        remove_field => [ "tools" ]
#    }
#}

output {
  #opensearch {
  #  id                => "worker-jenkinsci-elasticsearch-output"
  #  hosts             => ["https://os01:9200"]
  #  cacert            => "/usr/share/logstash/misc/client.pem"
  #  ssl               => true
  #  ssl_certificate_verification => false
  #  user              => "admin"
  #  password          => "admin"
  #  index             => "fos"
  #  manage_template   => false
  #  retry_on_conflict => 10
  #}
    #kafka {
    #    topic_id => "topic_ssd-projects"
    #    bootstrap_servers => "10.27.0.37:9092"
    #    codec => json
    #    security_protocol => "SASL_PLAINTEXT"
    #    sasl_mechanism => "SCRAM-SHA-512"
    #    sasl_jaas_config => "org.apache.kafka.common.security.scram.ScramLoginModule required username='admin' password='gJWJWq9zhuiuZ8upuz39v';"
    #}
    
    stdout { codec => "rubydebug" }
}