
filter {
  if ([type] == "sbergilestruct" and "sync-mq" not in [tags]) {

    if [elk_fos_data_view] {
      mutate{
        add_field => {
          "is_dit" => false
          "position_state" => "occupied"
        }
        rename => {
          "[elk_fos_data_view][updated]" => "updated"
          "[elk_fos_data_view][EmployeeEmail]" => "email_sigma"
          "[elk_fos_data_view][EmployeeLogin]" => "login_sigma"
          "[elk_fos_data_view][EmployeeCode]"  => "personal_number"
          "[elk_fos_data_view][EmployeeName]"  => "full_name"
          "[elk_fos_data_view][FunctionalBlock]"  => "functional_block"
          "[elk_fos_data_view][FunctionalBlockId]"  => "functional_block_id"
          "[elk_fos_data_view][TribeCode]"  => "tribe_code"
          "[elk_fos_data_view][TribeLead]"  => "tribe_lead"
          "[elk_fos_data_view][TribeLeadID]"  => "tribe_lead_id"
          "[elk_fos_data_view][TribeName]"  => "tribe"
          "[elk_fos_data_view][TribeStatusId]"  => "tribe_status"
          "[elk_fos_data_view][SquadVacancyStatusId]"  => "position_status"
        }
      }

      mutate{
        add_field => {
          "tribe_id" => "%{tribe_code}"
        }
        split => {
          "tribe_lead" => ";"
          "tribe_lead_id" => ";"
        }
        lowercase => [ "email_sigma" ]
      }

      mutate{
        split => {
          "[elk_fos_data_view][JiraProjectValue]" => ";"
        }
      }

      mutate{
        rename => {
          "[elk_fos_data_view][SquadName]" => "squad_name"
          "[elk_fos_data_view][SquadInfo]" => "squad_info"
          "[elk_fos_data_view][SquadStatusId]" => "squad_status"
          "[elk_fos_data_view][SquadCode]" => "squad_code"
          "[elk_fos_data_view][JiraProjectValue]" => "jira_project_value"
        }
      }

      # mutate{
      #   add_field => {
      #     "squad" => "%{squad_name}"
      #   }
      # }

      if [squad_name] {
        mutate {
          add_field => { "squad" => "%{squad_name}" }
        }
      }     

      date {
        match => [ "[elk_fos_data_view][SquadActivatedAt]", "ISO8601" ]
        timezone => "Europe/Moscow"
        target => "squad_activated"
      }

      prune {
        blacklist_names => [
          "^command$",
          "^headers$",
          "^elk_fos_data_view$"
        ]
      }

      # Подтягиваем описание проекта как имя команды, для гостеха пока не используется, пока комментирую
      # jdbc_static {
      #   loaders => [
      #     {
      #       id => "projects"
      #       query => "select pkey, pname from project order by pkey"
      #       local_table => "jira_projects"
      #     }
      #   ]
      #   local_db_objects => [
      #     {
      #       name => "jira_projects"
      #       index_columns => ["pkey"]
      #       columns => [
      #         ["pkey", "varchar(255)"],
      #         ["pname", "varchar(255)"]
      #       ]
      #     }
      #   ]
      #   local_lookups => [
      #     {
      #       query => "select pname from jira_projects WHERE pkey = UPPER(:pkey)"
      #       parameters => { pkey => "squad_code" }
      #       target => "[@metadata][squad]"
      #     }
      #   ]
      #   staging_directory => "/usr/share/logstash/data/jdbc_static"
      #   loader_schedule => "*/30 * * * *"
      #   jdbc_driver_library => "/usr/share/logstash/misc/scripts/jdbc/postgresql-9.4.1208-jdbc42-atlassian-hosted.jar"
      #   jdbc_driver_class => "org.postgresql.Driver"
      #   jdbc_connection_string => "jdbc:postgresql://p-jira-db.sberworks.novalocal:5432/jira8gtdb"
      #   jdbc_user => "elk_tech_user"
      #   jdbc_password => "6u5]&D3M~>?c"
      # }
      # if "" in [@metadata][squad][0][pname] and [@metadata][squad][0][pname] != "" {
      #   mutate {
      #     replace => {
      #       "squad" => "%{[@metadata][squad][0][pname]}"
      #     }
      #   }
      # } else {
      #   mutate {
      #     replace => {
      #       "squad" => "%{squad_code}"
      #     }
      #   }
      # }

      ruby {
        code => "
          event.set('email_sigma', [event.get('email_sigma')].flatten)
          # event.set('jira_project_key', [event.get('jira_project_key')].flatten)
        "
      }

    }

    if "ldap-data" in [tags] {

      mutate {
        replace => {
          "[@metadata][output][document_id]" => "%{[_id]}"
          "[@metadata][output][index]"       => "%{[_index]}"
        }
      }

      mutate {
        rename => {
          "@timestamp" => "@ldap_timestamp"
        }
      }

      prune {
        whitelist_names => [
          "^@ldap_timestamp$",
          "^type$",
          "^logstash",
          "^dn_",
          "^login_"
        ]
      }

    }
    else {
      if "dka-csv" not in [tags] {
        ruby {
            code => "event.set('is_dit', event.get('is_dit').length > 0 ? event.get('is_dit') : '0')"
        }

        mutate {
          convert => {
            "is_dit" => "boolean"
          }

          lowercase => ["login_alpha", "login_sigma", "jira_domain"]
        }

        date {
          match => [ "squad_created", "dd.MM.yyyy" ]
          target => "squad_created"
        }
        date {
          match => [ "squad_activated", "dd.MM.yyyy" ]
          target => "squad_activated"
        }
        date {
          match => [ "squad_abolished", "dd.MM.yyyy" ]
          target => "squad_abolished"
        }

        if [is_dit] {
          mutate {
            rename => {
              "tribe_code" => "dit_code"
              "tribe" => "dit_name"
              "squad_code" => "dit_squad_code"
              "squad" => "dit_squad"
              "cluster_code "=> "dit_cluster_code"
              "cluster" => "dit_cluster"
            }
          }
        }

        # С этой историей дублируются значения в поле squad_name, назначение не понял
        # if "" in [squad] {
        #   mutate {
        #     add_field => { "squad_name" => "%{squad}" }
        #   }
        # } else {
        #   mutate {
        #     replace => { "squad_name" => "" }
        #   }
        # }
        if [squad_status] == "draft" and ![is_dit]{
          mutate {
            replace => {
              "squad" => "%{squad_name} #draft"
            }
          }
        }

        ruby {
          code => "
            begin
              unless event.get('jira_project_value').nil?
                event.set('[jira][project]', event.get('jira_project_value').map{ |x| {
                  'key': x.upcase,
                  'segment': 'sigma',
                  'search_key': 'sigma_' + x.upcase
                  }
                })
              end
            rescue StandardError => msg
              event.set('ruby_exception', {
                'action'=> 'convert jira info',
                'error' => msg.message,
                'trace' => msg.backtrace.inspect
              }.to_json)
            end
          "
          # remove_field => [ "jira_project_key", "jira_board_href" ]
        }
      }

      mutate {
        replace => {
          "[@metadata][output][document_id]" => ""
          "[@metadata][output][index]"       => "metrics-mappings-%{type}-%{+YYYY.MM.dd}"
        }
      }

      if [squad_code] {
        if "" in [email_sigma][1] and "" != [email_sigma][1] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{squad_code}_%{[email_sigma][1]}"
            }
          }
        } else if "" in [email_sigma][0] and "" != [email_sigma][0] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{squad_code}_%{[email_sigma][0]}"
            }
          }
        } else if "" in [email_alpha][1] and "" != [email_alpha][1]  {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{squad_code}_%{[email_alpha][1]}"
            }
          }
        } else if "" in [email_alpha][0] and "" != [email_alpha][0] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{squad_code}_%{[email_alpha][0]}"
            }
          }
        } else if "" in [position_code] and "" != [position_code] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{position_code}"
            }
          }
        }
      }
      else {
        if "" in [email_sigma][1] and "" != [email_sigma][1] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "no_squad_code_%{[email_sigma][1]}"
            }
          }
        } else if "" in [email_sigma][0] and "" != [email_sigma][0] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "no_squad_code_%{[email_sigma][0]}"
            }
          }
        } else if "" in [email_alpha][1] and "" != [email_alpha][1] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "no_squad_code_%{[email_alpha][1]}"
            }
          }
        } else if "" in [email_alpha][0] and "" != [email_alpha][0] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "no_squad_code_%{[email_alpha][0]}"
            }
          }
        } else if "" in [position_code] and "" != [position_code] {
          mutate {
            replace => {
              "[@metadata][output][document_id]" => "%{position_code}"
            }
          }
        }
      }
    }
  }
}
