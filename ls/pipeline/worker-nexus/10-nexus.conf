filter {
  if ([type] in [ "nexus-ci", "nexus-cdp" ] and "sync-mq" not in [tags]) {

    if "" in [asset][name] {
      if [asset][format] != "maven2" {
        drop {}
      }
      grok {
        id        => "10-nexus.conf_0_grok"
        match     => { "[asset][name]" => "^(?<group_id>.+)/(?<artifact_id>[^/]+)/(?<version>[^/]+)/(?<file>[^/]+)$" }
        add_field => {
          "repo_id" => "%{repositoryName}"
        }
      }
      mutate {
        id        => "10-nexus.conf_1_mutate"
        gsub      => [ "[group_id]", "/", "." ]
      }
    }

    if [file] =~ "\/(pom\.xml|\.index.*?|maven-metadata\.xml|.*?\.(sha1|md5|pom))$" {
      drop {}
    }

    if "" not in [artifact_id] { drop{} }

    mutate {
      id        => "10-nexus.conf_2_mutate"
      add_field => {
        "@recieve_timestamp" => "%{@timestamp}"
      }
    }

    if "" in [timestamp] {
      date { match => ["timestamp", "ISO8601"]  target => "@timestamp" }
      mutate {
        id           => "10-nexus.conf_3_mutate"
        remove_field => [ "timestamp" ]
      }
    } else {
      date { match => ["timestamp", "UNIX_MS"]  target => "@timestamp" }
    }

    if "" in [version] {
      grok {
        id           => "10-nexus.conf_4_grok"
        match        => {
          "version"  => "(?<distr_type>[DP])-(?<d_1>\d+)\.(?<d_2>\d+)\.(?<d_3>\d+)-(?<d_4>\d+)"
        }
        add_field    => {
          "distr_v1" => "%{distr_type}-%{d_1}"
          "distr_v2" => "%{distr_type}-%{d_1}.%{d_2}"
          "distr_v3" => "%{distr_type}-%{d_1}.%{d_2}.%{d_3}"
        }
        remove_field => [ "d_1", "d_2", "d_3", "d_4"]
      }
    }

    grok {
      id    => "10-nexus.conf_5_grok"
      match => {
        "repo_id" => "%{DATA:tribe_code}_PROD"
      }
    }

    ruby {
      id   => "10-nexus.conf_6_ruby"
      code => "
        files = event.get('file')
        unless files.is_a?(Array)
          files = [files]
        end
        files.each { |file|
          if file =~ /-(\w{2,})(-|_)(ok|fail|err|temp)(.html|.flag)/
            if $3 == 'err'
              event.set($1 + '_fail', event.get('@timestamp'))
            else
              event.set($1 + '_' + $3, event.get('@timestamp'))
            end
          end
        }
      "
    }

    ### Парсинг Release Notes


    mutate {
      id      => "10-nexus.conf_7_mutate"
      replace => {
        "[@metadata][output][document_id]" => "%{repo_id}:%{group_id}/%{artifact_id}/%{version}"
      }
    }

    if ("" in [tribe_code] and [tribe_code] != "") {
      opensearch {
        id       => "10-nexus.conf_8_elasticsearch"
        hosts    => [{{ opensearch_host_port }}]
        ca_file  => "/usr/share/logstash/misc/ca.crt"
        user     => "{{ opensearch_tech_user }}"
        password => "{{ opensearch_tech_password }}"
        index    => "metrics-mappings-sbergilestruct"
        query    => "tribe_code.keyword:%{[tribe_code]}"
        fields   => {
          "tribe" => "tribe"
        }
        enable_sort => false
        result_size => 1
        ssl      => false
      }

      ruby {
        id   => "10-nexus.conf_9_ruby"
        path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
        script_params => {
          "fields" => [
            "tribe"
          ]
        }
      }
    }

    grok {
      id    => "10-nexus.conf_10_grok"
      match => { "[group_id]" => "(?<conf_item_group_id>CI[0-9]{8,})" }
    }
    if "" in [conf_item_group_id] or "" in [conf_item_group_id][0] {
      if "" in [conf_item] or "" in [conf_item][0] {
        mutate {
          id    => "10-nexus.conf_11_mutate"
          merge => { "[conf_item]" => "[conf_item_group_id]" }
        }
        mutate {
          id           => "10-nexus.conf_12_mutate"
          remove_field => [ "[conf_item_group_id]" ]
        }
      } else {
        mutate {
          id     => "10-nexus.conf_13_mutate"
          rename => { "conf_item_group_id" => "conf_item" }
        }
      }
    }
    grok {
      id    => "10-nexus.conf_14_grok"
      match => { "[artifact_id]" => "(?<conf_item_artifact_id>CI[0-9]{8,})" }
    }
    if "" in [conf_item_artifact_id] or "" in [conf_item_artifact_id][0] {
      if "" in [conf_item] or "" in [conf_item][0] {
        mutate {
          id    => "10-nexus.conf_15_mutate"
          merge => { "[conf_item]" => "[conf_item_artifact_id]" }
        }
        mutate {
          id           => "10-nexus.conf_16_mutate"
          remove_field => [ "[conf_item_artifact_id]" ]
        }
      } else {
        mutate {
          id     => "10-nexus.conf_17_mutate"
          rename => { "conf_item_artifact_id" => "conf_item" }
        }
      }
    }

    if "" in [conf_item] or "" in [conf_item][0] {
      esquerystring {
        id     => "10-nexus.conf_18_esquerystring"
        source => "[conf_item]"
        target => "[@metadata][search][conf_item]"
      }
      if ("" in [@metadata][search][conf_item] and [@metadata][search][conf_item] != "") {
        opensearch {
          id       => "10-nexus.conf_19_elasticsearch"
          hosts    => [{{ opensearch_host_port }}]
          ca_file  => "/usr/share/logstash/misc/ca.crt"
          user     => "{{ opensearch_tech_user }}"
          password => "{{ opensearch_tech_password }}"
          index    => "metrics-mappings-sm_ci"
          query    => "_id:%{[@metadata][search][conf_item]}"
          fields   => {
            "system_hpsm" => "system_hpsm"
          }
          enable_sort => false
          result_size => 1000
          ssl	=> false
        }

        ruby {
          id   => "10-nexus.conf_20_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              "system_hpsm"
            ]
          }
        }
      }
    }

    if "" not in [system_tribe] and "" not in [system_tribe][0] and ("" in [conf_item] or "" in [conf_item][0]) {
      esquerystring {
        id     => "10-nexus.conf_21_esquerystring"
        source => "[conf_item]"
        target => "[@metadata][system_tribe][conf_item]"
      }
      if ("" in [@metadata][system_tribe][conf_item] and [@metadata][system_tribe][conf_item] != "") {
        opensearch {
          id       => "10-nexus.conf_22_elasticsearch"
          hosts    => [{{ opensearch_host_port }}]
          ca_file  => "/usr/share/logstash/misc/ca.crt"
          user     => "{{ opensearch_tech_user }}"
          password => "{{ opensearch_tech_password }}"
          index    => "metrics-mappings-as2tribe"
          query    => "conf_item:%{[@metadata][system_tribe][conf_item]}"
          fields   => {
            "service"            => "service"
            "system_tribe"       => "system_tribe"
            "system"             => "system"
            "service_tribe_code" => "service_tribe_code"
            "system_tribe_code"  => "system_tribe_code"
            "service_tribe"      => "service_tribe"
          }
          enable_sort => false
          result_size => 1000
          ssl         => false
        }

        ruby {
          id   => "10-nexus.conf_23_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              "service",
              "system_tribe",
              "system",
              "service_tribe_code",
              "system_tribe_code",
              "service_tribe"
            ]
          }
        }
      }
    }
    if "" not in [system_sharepoint] and "" not in [system_sharepoint][0] and ("" in [conf_item] or "" in [conf_item][0]) {
      esquerystring {
        id     => "10-nexus.conf_24_esquerystring"
        source => "[conf_item]"
        target => "[@metadata][system_sharepoint][conf_item]"
      }
      if ("" in [@metadata][system_sharepoint][conf_item] and [@metadata][system_sharepoint][conf_item] != "") {
        opensearch {
          id       => "10-nexus.conf_25_elasticsearch"
          hosts    => [{{ opensearch_host_port }}]
          ca_file  => "/usr/share/logstash/misc/ca.crt"
          user     => "{{ opensearch_tech_user }}"
          password => "{{ opensearch_tech_password }}"
          index    => "metrics-mappings-sharepoint-repo2system"
          query    => "conf_item:%{[@metadata][system_sharepoint][conf_item]}"
          fields   => {
            "system_sharepoint"      => "system_sharepoint"
            "system_code_sharepoint" => "system_code_sharepoint"
          }
          enable_sort => false
          result_size => 1000
          ssl         => false
        }

        ruby {
          id   => "10-nexus.conf_26_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              "system_sharepoint",
              "system_code_sharepoint"
            ]
          }
        }
      }
    }

    if [sast_ok] or [sast_temp] {
      ## Подтягиваем коммиты, которые могли попасть в этот артефакт
      esquerystring {
        id     => "10-nexus.conf_27_esquerystring"
        source => "[@metadata][output][document_id]"
        target => "[@metadata][search][nexus_artifact]"
      }
      if ("" in [@metadata][search][nexus_artifact] and [@metadata][search][nexus_artifact] != "") {
        opensearch {
          id       => "10-nexus.conf_28_elasticsearch"
          hosts    => [{{ opensearch_host_port }}]
          ca_file  => "/usr/share/logstash/misc/ca.crt"
          user     => "{{ opensearch_tech_user }}"
          password => "{{ opensearch_tech_password }}"
          index    => "metrics-jenkins-*,metrics-jenkinsqa-*"
          query    => "nexus_artifact_upload.keyword:%{[@metadata][search][nexus_artifact]}"
          fields   => {
            "bitbucket_commit_hash" => "bitbucket_commit_hash"
            "ciUrl"                 => "ciUrl"
          }
          enable_sort => false
          result_size => 1000
          ssl         => false
        }

        ruby {
          id   => "10-nexus.conf_29_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              "bitbucket_commit_hash",
              "ciUrl"
            ]
          }
        }
      }
      ## Подтягиваем информацию по этим коммитам из SALM
      if "" in [bitbucket_commit_hash] or "" in [bitbucket_commit_hash][0] {
        ruby {
          code => "
            unless event.get('[bitbucket_commit_hash]').nil?
              event.set('[@metadata][query][bitbucket_commit_hash]',
                [event.get('[bitbucket_commit_hash]')].flatten
                  .select{ |bitbucket_commit_hash| [34.chr, 27.chr, '\n', '\r', '\t'].none? { |char| bitbucket_commit_hash.include? char }}
                  .map { |bitbucket_commit_hash| 34.chr + bitbucket_commit_hash + 34.chr }
                  .take(1024)
              )
            else
              event.set('[@metadata][query][bitbucket_commit_hash]', [])
            end
          "
        }
        if ("" in "/usr/share/logstash/misc/el_filter_tpl/nexus-sast-mapping.json" and "/usr/share/logstash/misc/el_filter_tpl/nexus-sast-mapping.json" != "") {
        opensearch {
          id       => "10-nexus.conf_30_elasticsearch"
          hosts    => [{{ opensearch_host_port }}]
          ca_file  => "/usr/share/logstash/misc/ca.crt"
          user     => "{{ opensearch_tech_user }}"
          password => "{{ opensearch_tech_password }}"
          index    => "metrics-sast-*"
          query_template => "/usr/share/logstash/misc/el_filter_tpl/nexus-sast-mapping.json"
          fields   => {
          }
          aggregation_fields => {
            "commit" => "commit"
          }
          enable_sort => false
          result_size => 1000
          ssl         => false
        }

        ruby {
          id   => "10-nexus.conf_31_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              
            ]
          }
        }
      }
        ruby {
          code => "
            unless event.get('[commit][buckets]').nil?
              event.set('[sast_check_commits]',
                event.get('[commit][buckets]')
                  .map { |sast_commit| sast_commit['last_run']['hits']['hits'][0]['_source'] }
              )
              if event.get('[sast_check_commits]').length > 0
                unless event.get('[sast_ok]').nil?                  event.set('[sast_check_ok]',
                    event.get('[sast_check_commits]')
                      .count { |sast_commit| sast_commit['sast_pass'] == false or sast_commit['current_hash'] == false } == 0
                  )
                end
                unless event.get('[sast_temp]').nil?
                  event.set('[sast_check_temp]',
                    event.get('[sast_check_commits]')
                      .count { |sast_commit| sast_commit['no_critical_defects'] == false } == 0
                  )
                end
              end
            end
          "
          remove_field => ["[commit]"]
        }
      }
    }

    if [type] in [ "nexus-ci", "nexus-cdp" ] {
      mutate {
        id      => "10-nexus.conf_32_mutate"
        replace => {
          "source" => "%{type}"
          "type" => "nexus"
        }
        add_tag => ['custom-output']
      }
    }
  }
}

output {
  if [type] in [ "nexus", "nexus-prom" ] {
    opensearch {
      id                => "nexus-elasticsearch-output"
      hosts             => [{{ opensearch_host_port }}]
      cacert            => "/usr/share/logstash/misc/ca.crt"
      ssl               => true
      ssl_certificate_verification => false
      user              => "{{ opensearch_tech_user }}"
      password          => "{{ opensearch_tech_password }}"
      script            => "metrics-nexus-upsert"
      script_var_name   => "event"
      script_lang       => ""
      doc_as_upsert     => true
      action            => "update"
      document_id       => "%{[@metadata][output][document_id]}"
      script_type       => "indexed"
      index             => "metrics-%{type}"
      manage_template   => false
      retry_on_conflict => 10
    }
  }
  if [type] == 'nexus2squad' {
    opensearch {
      id                => "nexus2squad-elasticsearch-output"
      hosts             => [{{ opensearch_host_port }}]
      cacert            => "/usr/share/logstash/misc/ca.crt"
      ssl               => true
      ssl_certificate_verification => false
      user              => "{{ opensearch_tech_user }}"
      password          => "{{ opensearch_tech_password }}"
      script            => "metrics-nexus-upsert"
      script_var_name   => "event"
      script_lang       => ""
      doc_as_upsert     => true
      action            => "update"
      document_id       => "%{[@metadata][output][document_id]}"
      script_type       => "indexed"
      index             => "%{[@metadata][output][index]}"
      manage_template   => false
      retry_on_conflict => 10
    }
  }
}
