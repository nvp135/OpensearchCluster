filter {
  if ([type] == "jenkins-cdp" and "sync-mq" not in [tags]) {
    mutate {
      replace => {
        "type" => "jenkinscdp"
      }
    }

    if ("" in [buildUrl]) {
      mutate {
        add_field => {"[@metadata][search][jira_project_key]" => "%{buildUrl}"}
      }
      mutate {
        gsub => ["[@metadata][search][jira_project_key]", "job/([^/]+)(/.*)?$", "\1"]
        uppercase => ["[@metadata][search][jira_project_key]"]
      }
      if ("" in [@metadata][search][jira_project_key] and [@metadata][search][jira_project_key] != "") {
      opensearch {
        id       => "10-jenkins-cdp.conf_0_elasticsearch"
        hosts    => [{{ opensearch_host_port }}]
        ca_file  => "/usr/share/logstash/misc/ca.crt"
        user     => "{{ opensearch_tech_user }}"
        password => "{{ opensearch_tech_password }}"
        index    => "metrics-mappings-sbergilestruct"
        query    => "jira.project.key.keyword:%{[@metadata][search][jira_project_key]}"
        fields   => {
          "tribe"      => "tribe"
          "squad_info" => "squad_info"
          "squad_type" => "squad_type"
          "squad"      => "squad"
          "squad_code" => "squad_code"
          "tribe_code" => "tribe_code"
        }
        enable_sort => false
        result_size => 1000
      }

      ruby {
        id   => "10-jenkins-cdp.conf_1_ruby"
        path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
        script_params => {
          "fields" => [
            "tribe",
            "squad_info",
            "squad_type",
            "squad",
            "squad_code",
            "tribe_code"
          ]
        }
      }
    }
    }
  }

  if ([type] == "jenkinscdp" and "sync-mq" not in [tags]) {
    if [host] not in [ "172.24.33.148" ] {
      mutate {
        add_tag => ["_unapproved_source"]
      }
    }

    if [endTime] {
      mutate {
        add_field => { "@receive_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "@receive_timestamp", "ISO8601" ]
        target => "@receive_timestamp"
      }

      date {
        match => [ "[endTime]", "UNIX_MS" ]
        target => "@timestamp"
      }
    } else if [startTime] {
      mutate {
        add_field => { "@receive_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "@receive_timestamp", "ISO8601" ]
        target => "@receive_timestamp"
      }

      date {
        match => [ "[startTime]", "UNIX_MS" ]
        target => "@timestamp"
      }
    }

    grok {
      match => { "[jobDescription]" => "(?i)(?<no_deploy>\[no deploy\])" }
    }

    if "" in [no_deploy] {
      mutate {
        add_tag => ["no_deploy"]
      }
    }

    if "no_deploy" not in [tags] {
      grok {
        match => { "[buildDescription]" => "(?i)(?<no_deploy>\[no deploy\])" }
      }

      if "" in [no_deploy] {
        mutate {
          add_tag => ["no_deploy"]
        }
      }
    }

    mutate {
      replace => {
        "[@metadata][output][document_id]" => ""
        "[@metadata][output][index]"       => "metrics-%{type}-%{+YYYY.MM}"
      }
      remove_field => [ "headers", "parameters", "no_deploy" ]
    }

    if ("" in [buildUrl]) {
      mutate {
        add_field => {"jobPath" => "%{buildUrl}"}
      }
      mutate {
        gsub => ["jobPath", "/[0-9]+/$", ""]
      }
      if [eventType] == "build" {
        grok {
          match => { "buildUrl" => "/(?<buildUrlPart>[^/]+?)/[^/]+/[0-9]+/$" }
        }
        if [buildUrlPart] != "job" {
          mutate {
            add_tag => ["submodule"]
          }
        }
        mutate {
          remove_field => ["buildUrlPart"]
        }
      }
    }

    date { match => ["createdDate", "ISO8601", "UNIX_MS", "UNIX"]  target => "createdDateD" }
    date { match => ["updatedDate", "ISO8601", "UNIX_MS", "UNIX"]  target => "updatedDateD" }
    date { match => ["startTime", "ISO8601", "UNIX_MS", "UNIX"]  target => "startTimeD" }
    date { match => ["entryTime", "ISO8601", "UNIX_MS", "UNIX"]  target => "entryTimeD" }
    date { match => ["endTime", "ISO8601", "UNIX_MS", "UNIX"]  target => "endTimeD" }
    date { match => ["exitTime", "ISO8601", "UNIX_MS", "UNIX"]  target => "exitTimeD" }

    if [eventType] in ["build", "stage"] {

      if [eventType] == "build" {

        mutate {
          replace => {
            "[@metadata][output][document_id]" => "%{ciUrl}_%{buildUrl}_%{eventType}_%{result}"
          }
        }
        grok {
          match => { "ciUrl" => "^http(s)?://%{DATA:[@metadata][ciUrl]}$" }
        }

        if [result] == "INPROGRESS" {
          mutate {
            add_tag => ["job_started"]
          }
        }

        if [result] in ["SUCCESS","FAILURE","ABORTED","UNSTABLE"] {
          mutate {
            add_tag => ["job_finished"]
          }
        }

        elapsed {
          start_tag => "job_started"
          end_tag => "job_finished"
          unique_id_field => "buildUrl"
          timeout => 1209600 # 14 days
          new_event_on_match => false
        }
      } else {
        mutate {
          replace => {
            "[@metadata][output][document_id]" => "%{ciUrl}_%{stageUrl}_%{eventType}_%{result}"
          }
        }
      }

      fingerprint {
        key => "mazafuckaaa"
        source => "[@metadata][output][document_id]"
        target => "[@metadata][output][document_id]"
      }

      if "" in [actions][type] or "" in [actions][0][type] {

        ruby {
          id   => "10-jenkins-cdp.conf_2_ruby"
          init => "
            require 'logstash/filters/grok'
            require 'logstash/filters/elasticsearch'
            require 'logstash/filters/rest'
            require 'logstash/filters/urldecode'
            require 'logstash/filters/kv'

            @grok_nexus_repo_id = LogStash::Filters::Grok.new({
              'match'     => { 'repo_id' => '%{DATA:repo_group}_(?:release|snapshot|thirdparty|group)|CC_CD_KK_repo|Nexus_PROD' },
              'overwrite' => [ 'repo_group' ]
            })
            @grok_nexus_repo_id.register

            @grok_nexus_download_maven = LogStash::Filters::Grok.new({
              'match'     => { '[action_single][url]' => 'http(s)?://((sw\.v-serv\.ru(:80)?|172\.24\.32\.94:8082)/nexus-cd)/(service/local/artifact/maven/(redirect|content))\?%{NOTSPACE:url_params}' },
              'overwrite' => [ 'url_params' ]
            })
            @grok_nexus_download_maven.register

            @kv_nexus_download_maven = LogStash::Filters::KV.new({
              'source'      => 'url_params',
              'field_split' => '&?'
            })
            @kv_nexus_download_maven.register

            @grok_nexus_download = LogStash::Filters::Grok.new({
              'match'     => { '[action_single][url]' => 'http(s)?://((sw\.v-serv\.ru(:80)?|172\.24\.32\.94:8082)/nexus-cd)/repository/(?<repo_id>[^/ &]+)/(content/)?(?<group_id>[^ &\(\)]*?)/(?<artifact_id>[^/ &\(\)]+)/(?<version>[^/ &\(\)]+)/(?<file_name>[^/ &]+)([^0-9a-zA-Z])*?($|\[|\<|\)|\()' },
              'overwrite' => [ 'repo_id', 'group_id', 'artifact_id', 'version', 'file_name' ]
            })
            @grok_nexus_download.register

          "
          code => "
            begin

              ## Инициируем массивы сбора данных
              nexus_artifact = []
              nexus_artifact_no_version = []
              kpi = []
              system_sharepoint = []
              system_code_sharepoint = []

              ## В цикле обрабатываем все actions
              event.get('[actions]').each { |action|
                event.set('action_single', action)

                ## Получение артефакта из Nexus
                if action['type'] == 'NexusDownloadAction' and not (action['url'].nil? or action['url'].include? 'nexus/content/groups/public' or action['url'].include? 'org/apache')
                  event.set('[action_single][url]', event.get('[action_single][url]').gsub(/(?<!:)\/{2,}/, '/').strip)
                  if event.get('[action_single][url]').include? 'maven/redirect' or event.get('[action_single][url]').include? 'maven/content'
                    @grok_nexus_download_maven.filter(event)
                    if event.get('url_params').is_a?(String) and event.get('url_params').include? 'g='
                      @kv_nexus_download_maven.filter(event)
                      event.set('repo_id', event.get('r'))
                      event.set('group_id', event.get('g'))
                      event.set('artifact_id', event.get('a'))
                      event.set('version', event.get('v'))
                      event.set('e', event.get('p')) unless event.get('e').is_a?(String)
                      if event.get('c').is_a?(String)
                        event.set('file_name', event.sprintf('%{artifact_id}-%{version}-%{c}.%{e}'))
                      else
                        event.set('file_name', event.sprintf('%{artifact_id}-%{version}.%{e}'))
                      end
                    end
                  else
                    @grok_nexus_download.filter(event)
                  end
                  if event.get('repo_id').is_a?(String) and not event.get('repo_id').include? 'thirdparty' and event.get('file_upload') != 'maven-metadata.xml'
                    @grok_nexus_repo_id.filter(event)
                    event.set('group_id', event.get('group_id').gsub('/', '.'))
                    event.set('repo_group', '@common@') if event.get('repo_id') == 'releases'
                    event.set('repo_group', event.get('repo_id')) unless event.get('repo_group').is_a?(String)
                    create_nexus_artifact = false
                    if event.get('file_name').is_a?(String)
                      if ['rar', 'zip', 'ipa', 'gz', 'tar', 'exe', 'nupkg', 'jar', 'apk', 'tgz', 'gst', 'war', 'bin', 'sav'].include?(File.extname(event.get('file_name')).gsub('.', '')) then create_nexus_artifact = true end
                    end
                    if create_nexus_artifact
                      nexus_artifact.push(event.sprintf('%{repo_group}:%{group_id}/%{artifact_id}/%{version}'))
                      nexus_artifact_no_version.push(event.sprintf('%{repo_group}:%{group_id}/%{artifact_id}'))
                    end
                  end
                  [
                    'url_params', 'r', 'g', 'a', 'v', 'c', 'f', 'e', 'p',
                    'repo_id',
                    'repo_group',
                    'group_id',
                    'artifact_id',
                    'version',
                    'file_name',
                  ].each { |fieldname| event.remove(fieldname) }

                end

                ## Очищаяем поля, которые могли установиться в процессе обработки одного action-а
                ##   чтобы они не мешались на очередной итерации цикла
                [
                  'action_single',
                  'nexus_artifact',
                  'nexus_artifact_no_version',
                  'kpi',
                  'system_sharepoint',
                  'system_code_sharepoint',
                ].each { |fieldname| event.remove(fieldname) }
              }

              ## Собранные значения устанавливаем в поля
              event.set('nexus_artifact', nexus_artifact) if nexus_artifact.length > 0
              event.set('nexus_artifact_no_version', nexus_artifact_no_version) if nexus_artifact_no_version.length > 0
              event.set('kpi', kpi) if kpi.length > 0
              event.set('system_sharepoint', system_sharepoint) if system_sharepoint.length > 0
              event.set('system_code_sharepoint', system_code_sharepoint) if system_code_sharepoint.length > 0

            rescue StandardError => msg
              ## В случае ошибки сохраняем отладочную информацию
              event.set('ruby_exception', {
                'action'=> 'parse actions',
                'error' => msg.message,
                'trace' => msg.backtrace.inspect
              }.to_json)
            end
          "
        }

        ruby {
          id   => "10-jenkins-cdp.conf_3_ruby"
          path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
          script_params => {
            "fields" => [
              "nexus_artifact",
              "nexus_artifact_no_version",
              "conf_item",
              "system_sharepoint",
              "system_code_sharepoint",
              "kpi",
              "system_hpsm"
            ]
          }
        }
      }

      if [eventType]=="stage" and [result] !="INPROGRESS" {

        ## Получение nexus_artifact из предыдущих stage
        esquerystring {
          source => "[buildUrl]"
          target => "[@metadata][search][buildUrl]"
        }
        esquerystring {
          source => "[ciUrl]"
          target => "[@metadata][search][ciUrl]"
        }
        mutate {
          add_field => {
            "[@metadata][search][nexus_artifact_query]" => "ciUrl.keyword:%{[@metadata][search][ciUrl]} AND buildUrl.keyword:%{[@metadata][search][buildUrl]} AND eventType.keyword:stage AND NOT result.keyword:INPROGRESS AND _exists_:nexus_artifact"
          }
        }
        if ("" in [@metadata][search][nexus_artifact_query] and [@metadata][search][nexus_artifact_query] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_4_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "<metrics-jenkins*-{now/M{YYYY.MM}}*>,<metrics-jenkins*-{now-1d/M{YYYY.MM}}*>"
            query    => "%{[@metadata][search][nexus_artifact_query]}"
            fields   => {
              "nexus_artifact" => "prev_nexus_artifact"
              "buildUrl"       => "prev_buildUrl"
            }
            enable_sort => true
            sort        => "@timestamp:desc"
            result_size => 10
          }

          ruby {
            id   => "10-jenkins-cdp.conf_5_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "prev_nexus_artifact",
                "prev_buildUrl"
              ]
            }
          }
        }

        if "" in [prev_nexus_artifact] or "" in [prev_nexus_artifact][0] or "" in [prev_nexus_artifact][0][0] {
          ruby {
              path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
              script_params => { "fields" => "prev_nexus_artifact" }
          }
          mutate {
            merge => { "[nexus_artifact]" => "[prev_nexus_artifact]" }
          }
          mutate {
            remove_field => [ "[prev_nexus_artifact]" ]
          }
          ruby {
              path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
              script_params => { fields => [ "nexus_artifact", "prev_buildUrl" ] }
          }
        }

        ruby {
          code => "
            unless event.get('[nexus_artifact]').nil?
              event.set('[@metadata][query][nexus_artifact]',
                [event.get('[nexus_artifact]')].flatten
                  .select{ |nexus_artifact| [34.chr, 27.chr, '\n', '\r', '\t'].none? { |char| nexus_artifact.include? char }}
                  .map { |nexus_artifact| 34.chr + nexus_artifact + 34.chr }
                  .take(1024)
              )
            else
              event.set('[@metadata][query][nexus_artifact]', [])
            end
          "
        }

        ## Добавляем ссылку на предыдущий билд с таким же nexus_artifact
        if ("" in [@metadata][query][nexus_artifact] or "" in [@metadata][query][nexus_artifact][0]) and ("" not in [prev_buildUrl] or "" not in [prev_buildUrl][0]) {

          if ("" in "/usr/share/logstash/misc/el_filter_tpl/jenkins-nexus-artifact-mapping.json" and "/usr/share/logstash/misc/el_filter_tpl/jenkins-nexus-artifact-mapping.json" != "") {
            opensearch {
              id       => "10-jenkins-cdp.conf_6_elasticsearch"
              hosts    => [{{ opensearch_host_port }}]
              ca_file  => "/usr/share/logstash/misc/ca.crt"
              user     => "{{ opensearch_tech_user }}"
              password => "{{ opensearch_tech_password }}"
              index    => "<metrics-jenkins*-{now/M{YYYY.MM}}*>,<metrics-jenkins*-{now-1d/M{YYYY.MM}}*>"
              query_template => "/usr/share/logstash/misc/el_filter_tpl/jenkins-nexus-artifact-mapping.json"
              fields   => {
                "buildUrl" => "prev_buildUrl"
              }
              enable_sort => false
              result_size => 1000
            }

            ruby {
              id   => "10-jenkins-cdp.conf_7_ruby"
              path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
              script_params => {
                "fields" => [
                  "prev_buildUrl"
                ]
              }
            }
          }

        }
      }

      if ("" in [nexus_artifact] or "" in [nexus_artifact][0]) {

        mutate {
          replace => {"[@metadata][query][result_size]" => 100}
        }

        ruby {
          code => "
            unless event.get('[nexus_artifact]').nil?
              event.set('[@metadata][query][nexus_artifact]',
                [event.get('[nexus_artifact]')].flatten
                  .select{ |nexus_artifact| [34.chr, 27.chr, '\n', '\r', '\t'].none? { |char| nexus_artifact.include? char }}
                  .map { |nexus_artifact| 34.chr + nexus_artifact + 34.chr }
                  .take(1024)
              )
            else
              event.set('[@metadata][query][nexus_artifact]', [])
            end
          "
        }

        if ("" in "/usr/share/logstash/misc/el_filter_tpl/nexus-artifact-mapping.json" and "/usr/share/logstash/misc/el_filter_tpl/nexus-artifact-mapping.json" != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_8_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-nexus2squad"
            query_template => "/usr/share/logstash/misc/el_filter_tpl/nexus-artifact-mapping.json"
            fields   => {
              "dit_cluster_code"       => "dit_cluster_code"
              "tribe"                  => "tribe"
              "dit_squad_code"         => "dit_squad_code"
              "squad_type"             => "squad_type"
              "org_unit1"              => "org_unit1"
              "org_unit2"              => "org_unit2"
              "org_unit3"              => "org_unit3"
              "org_unit4"              => "org_unit4"
              "product_code"           => "product_code"
              "cluster_code"           => "cluster_code"
              "system_code_sharepoint" => "system_code_sharepoint"
              "dit_code"               => "dit_code"
              "dit_cluster"            => "dit_cluster"
              "program"                => "program"
              "tribe_code"             => "tribe_code"
              "competence"             => "competence"
              "product"                => "product"
              "chapter_code"           => "chapter_code"
              "dit_squad"              => "dit_squad"
              "competence_code"        => "competence_code"
              "chapter"                => "chapter"
              "squad"                  => "squad"
              "cluster"                => "cluster"
              "system_sharepoint"      => "system_sharepoint"
              "dit_name"               => "dit_name"
              "squad_code"             => "squad_code"
              "kpi"                    => "kpi"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_9_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "dit_cluster_code",
                "tribe",
                "dit_squad_code",
                "squad_type",
                "org_unit1",
                "org_unit2",
                "org_unit3",
                "org_unit4",
                "product_code",
                "cluster_code",
                "system_code_sharepoint",
                "dit_code",
                "dit_cluster",
                "program",
                "tribe_code",
                "competence",
                "product",
                "chapter_code",
                "dit_squad",
                "competence_code",
                "chapter",
                "squad",
                "cluster",
                "system_sharepoint",
                "dit_name",
                "squad_code",
                "kpi"
              ]
            }
          }
        }

      }

      if ("" not in [nexus_artifact]) and ("" not in [nexus_artifact][0]) {
        if [eventType]=="build" and [result] !="INPROGRESS" {

          ## Получение nexus_artifact из предыдущих stage
          esquerystring {
            source => "[buildUrl]"
            target => "[@metadata][search][buildUrl]"
          }

          esquerystring {
            source => "[ciUrl]"
            target => "[@metadata][search][ciUrl]"
          }

          mutate {
            add_field => {
              "[@metadata][search][nexus_artifact_query]" => "ciUrl.keyword:%{[@metadata][search][ciUrl]} AND buildUrl.keyword:%{[@metadata][search][buildUrl]} AND eventType.keyword:stage AND NOT result.keyword:INPROGRESS AND _exists_:nexus_artifact"
            }
          }
          if ("" in [@metadata][search][nexus_artifact_query] and [@metadata][search][nexus_artifact_query] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_10_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "<metrics-jenkins*-{now/M{YYYY.MM}}*>,<metrics-jenkins*-{now-1d/M{YYYY.MM}}*>"
            query    => "%{[@metadata][search][nexus_artifact_query]}"
            fields   => {
              "nexus_artifact" => "nexus_artifact"
            }
            enable_sort => true
            sort        => "@timestamp:desc"
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_11_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "nexus_artifact"
              ]
            }
          }
        }
        }
      }

      grok {
        id    => "10-jenkins-cdp.conf_12_grok"
        match => { "[nexus_artifact]" => "(?<conf_item_nexus_artifact>CI[0-9]{8,})" }
      }
      if "" in [conf_item_nexus_artifact] or "" in [conf_item_nexus_artifact][0] {
        if "" in [conf_item] or "" in [conf_item][0] {
          mutate {
            id    => "10-jenkins-cdp.conf_13_mutate"
            merge => { "[conf_item]" => "[conf_item_nexus_artifact]" }
          }
          mutate {
            id           => "10-jenkins-cdp.conf_14_mutate"
            remove_field => [ "[conf_item_nexus_artifact]" ]
          }
        } else {
          mutate {
            id     => "10-jenkins-cdp.conf_15_mutate"
            rename => { "conf_item_nexus_artifact" => "conf_item" }
          }
        }
      }

      if "" in [conf_item] or "" in [conf_item][0] {
        esquerystring {
          id     => "10-jenkins-cdp.conf_16_esquerystring"
          source => "[conf_item]"
          target => "[@metadata][search][conf_item]"
        }
        if ("" in [@metadata][search][conf_item] and [@metadata][search][conf_item] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_17_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-sm_ci"
            query    => "_id:%{[@metadata][search][conf_item]}"
            fields   => {
              "system_hpsm" => "system_hpsm"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_18_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "system_hpsm"
              ]
            }
          }
        }
      }

      grok {
        id    => "10-jenkins-cdp.conf_19_grok"
        match => { "[nexus_artifact]" => "(?<nexus_artifact_conf_item_nexus_artifact>CI[0-9]{8,})" }
      }
      if "" in [nexus_artifact_conf_item_nexus_artifact] or "" in [nexus_artifact_conf_item_nexus_artifact][0] {
        if "" in [nexus_artifact_conf_item] or "" in [nexus_artifact_conf_item][0] {
          mutate {
            id    => "10-jenkins-cdp.conf_20_mutate"
            merge => { "[nexus_artifact_conf_item]" => "[nexus_artifact_conf_item_nexus_artifact]" }
          }
          mutate {
            id           => "10-jenkins-cdp.conf_21_mutate"
            remove_field => [ "[nexus_artifact_conf_item_nexus_artifact]" ]
          }
        } else {
          mutate {
            id     => "10-jenkins-cdp.conf_22_mutate"
            rename => { "nexus_artifact_conf_item_nexus_artifact" => "nexus_artifact_conf_item" }
          }
        }
      }

      if "" in [nexus_artifact_conf_item] or "" in [nexus_artifact_conf_item][0] {
        esquerystring {
          id     => "10-jenkins-cdp.conf_23_esquerystring"
          source => "[nexus_artifact_conf_item]"
          target => "[@metadata][search][conf_item]"
        }
        if ("" in [@metadata][search][conf_item] and [@metadata][search][conf_item] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_24_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-sm_ci"
            query    => "_id:%{[@metadata][search][conf_item]}"
            fields   => {
              "system_hpsm" => "nexus_artifact_system_hpsm"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_25_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "nexus_artifact_system_hpsm"
              ]
            }
          }
        }
      }

      grok {
        id    => "10-jenkins-cdp.conf_26_grok"
        match => { "[jobDescription]" => "(?<job_conf_item_jobDescription>CI[0-9]{8,})" }
      }
      if "" in [job_conf_item_jobDescription] or "" in [job_conf_item_jobDescription][0] {
        if "" in [job_conf_item] or "" in [job_conf_item][0] {
          mutate {
            id    => "10-jenkins-cdp.conf_27_mutate"
            merge => { "[job_conf_item]" => "[job_conf_item_jobDescription]" }
          }
          mutate {
            id           => "10-jenkins-cdp.conf_28_mutate"
            remove_field => [ "[job_conf_item_jobDescription]" ]
          }
        } else {
          mutate {
            id     => "10-jenkins-cdp.conf_29_mutate"
            rename => { "job_conf_item_jobDescription" => "job_conf_item" }
          }
        }
      }
      grok {
        id    => "10-jenkins-cdp.conf_30_grok"
        match => { "[fullJobName]" => "(?<job_conf_item_fullJobName>CI[0-9]{8,})" }
      }
      if "" in [job_conf_item_fullJobName] or "" in [job_conf_item_fullJobName][0] {
        if "" in [job_conf_item] or "" in [job_conf_item][0] {
          mutate {
            id    => "10-jenkins-cdp.conf_31_mutate"
            merge => { "[job_conf_item]" => "[job_conf_item_fullJobName]" }
          }
          mutate {
            id           => "10-jenkins-cdp.conf_32_mutate"
            remove_field => [ "[job_conf_item_fullJobName]" ]
          }
        } else {
          mutate {
            id     => "10-jenkins-cdp.conf_33_mutate"
            rename => { "job_conf_item_fullJobName" => "job_conf_item" }
          }
        }
      }

      if "" in [job_conf_item] or "" in [job_conf_item][0] {
        esquerystring {
          id     => "10-jenkins-cdp.conf_34_esquerystring"
          source => "[job_conf_item]"
          target => "[@metadata][search][conf_item]"
        }
        if ("" in [@metadata][search][conf_item] and [@metadata][search][conf_item] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_35_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-sm_ci"
            query    => "_id:%{[@metadata][search][conf_item]}"
            fields   => {
              "system_hpsm" => "job_system_hpsm"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_36_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "job_system_hpsm"
              ]
            }
          }
        }
      }


      # AS-Service Tribe mapping
      if "" in [nexus_artifact_conf_item]  or "" in [nexus_artifact_conf_item][0] {
        esquerystring {
          source => "[nexus_artifact_conf_item]"
          target => "[@metadata][search][nexus_artifact_conf_item]"
        }
        mutate {
          add_field => {
            "[@metadata][search][query_system]" => "conf_item:%{[@metadata][search][nexus_artifact_conf_item]}"
          }
          copy => {
            "nexus_artifact_conf_item" => "service_conf_item"
          }
        }
        mutate {
          copy => {
            "nexus_artifact_conf_item" => "conf_item"
          }
        }
        if ("" in [@metadata][search][query_system] and [@metadata][search][query_system] != "") {
                opensearch {
                  id       => "10-jenkins-cdp.conf_37_elasticsearch"
                  hosts    => [{{ opensearch_host_port }}]
                  ca_file  => "/usr/share/logstash/misc/ca.crt"
                  user     => "{{ opensearch_tech_user }}"
                  password => "{{ opensearch_tech_password }}"
                  index    => "metrics-mappings-as2tribe"
                  query    => "%{[@metadata][search][query_system]}"
                  fields   => {
                    "service"            => "service"
                    "system_dit"         => "system_dit"
                    "system_tribe"       => "system_tribe"
                    "system"             => "system"
                    "service_tribe_code" => "service_tribe_code"
                    "system_tribe_code"  => "system_tribe_code"
                    "service_dit"        => "service_dit"
                    "service_tribe"      => "service_tribe"
                  }
                  enable_sort => false
                  result_size => 1000
                }

                ruby {
                  id   => "10-jenkins-cdp.conf_38_ruby"
                  path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
                  script_params => {
                    "fields" => [
                      "service",
                      "system_dit",
                      "system_tribe",
                      "system",
                      "service_tribe_code",
                      "system_tribe_code",
                      "service_dit",
                      "service_tribe"
                    ]
                  }
                }
              }
        if "" not in [service] and "" not in [service][0] {
          mutate {
            remove_field => ["service_conf_item"]
          }
        }
        if "" not in [system] and "" not in [system][0] {
          mutate {
            remove_field => ["conf_item"]
          }
        }
      }
      if "" not in [system_sharepoint] and "" not in [system_sharepoint][0] and ("" in [conf_item] or "" in [conf_item][0]) {
        esquerystring {
          id     => "10-jenkins-cdp.conf_39_esquerystring"
          source => "[conf_item]"
          target => "[@metadata][system_sharepoint][conf_item]"
        }
        if ("" in [@metadata][system_sharepoint][conf_item] and [@metadata][system_sharepoint][conf_item] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_40_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-sharepoint-repo2system"
            query    => "conf_item:%{[@metadata][system_sharepoint][conf_item]}"
            fields   => {
              "system_sharepoint"      => "system_sharepoint"
              "system_code_sharepoint" => "system_code_sharepoint"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_41_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "system_sharepoint",
                "system_code_sharepoint"
              ]
            }
          }
        }
      }
      if "" not in [system_tribe] and "" not in [system_tribe][0] and ("" in [conf_item] or "" in [conf_item][0]) {
        esquerystring {
          id     => "10-jenkins-cdp.conf_42_esquerystring"
          source => "[conf_item]"
          target => "[@metadata][system_tribe][conf_item]"
        }
        if ("" in [@metadata][system_tribe][conf_item] and [@metadata][system_tribe][conf_item] != "") {
          opensearch {
            id       => "10-jenkins-cdp.conf_43_elasticsearch"
            hosts    => [{{ opensearch_host_port }}]
            ca_file  => "/usr/share/logstash/misc/ca.crt"
            user     => "{{ opensearch_tech_user }}"
            password => "{{ opensearch_tech_password }}"
            index    => "metrics-mappings-as2tribe"
            query    => "conf_item:%{[@metadata][system_tribe][conf_item]}"
            fields   => {
              "service"            => "service"
              "system_tribe"       => "system_tribe"
              "system"             => "system"
              "service_tribe_code" => "service_tribe_code"
              "system_tribe_code"  => "system_tribe_code"
              "service_tribe"      => "service_tribe"
            }
            enable_sort => false
            result_size => 1000
          }

          ruby {
            id   => "10-jenkins-cdp.conf_44_ruby"
            path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
            script_params => {
              "fields" => [
                "service",
                "system_tribe",
                "system",
                "service_tribe_code",
                "system_tribe_code",
                "service_tribe"
              ]
            }
          }
        }
      }

      ruby {
        path => "/usr/share/logstash/ruby-scripts/simplify-array.rb"
        script_params => {
          fields => [
            "nexus_artifact",
            "nexus_artifact_no_version",
            "squad",
            "squad_code",
            "squad_type",
            "tribe",
            "tribe_code",
            "program",
            "product",
            "product_code",
            "cluster_code",
            "cluster",
            "chapter",
            "chapter_code",
            "competence",
            "competence_code",
            "conf_item",
            "org_unit1",
            "org_unit2",
            "org_unit3",
            "org_unit4",
            "system_sharepoint",
            "system_code_sharepoint",
            "kpi",
            "system_hpsm"
          ]
        }
      }
    }
  }
}
